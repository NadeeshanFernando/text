name: Daily Sprint PR Digest

on:
  schedule:
    - cron: '30 3 * * *'  # Runs at 9:00 AM SLT
  workflow_dispatch:

jobs:
  sprint-pr-report:
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack PR Report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = "NadeeshanFernando"; // ✅ Your GitHub username
            const repos = ["text"]; // ✅ Repos you want to scan
            const sprintLabel = "sprint-47"; // ✅ Change for each sprint

            let totalPRs = 0;
            let report = "";

            for (const repo of repos) {
              const { data: prs } = await github.rest.pulls.list({
                owner: owner,
                repo,
                state: "open",
                per_page: 100,
              });

              const sprintPRs = prs.filter(pr =>
                pr.labels.some(label => label.name === sprintLabel)
              );

              if (sprintPRs.length === 0) continue;

              totalPRs += sprintPRs.length;
              report += `📦 *${repo}*\n`;

              sprintPRs.forEach(pr => {
                const updatedAt = new Date(pr.updated_at);
                const hoursOld = Math.floor((Date.now() - updatedAt.getTime()) / 3600000);
                report += `🔗 <${pr.html_url}|#${pr.number}> ${pr.title} – _${hoursOld}h old_\n`;
              });

              report += `\n`;
            }

            if (totalPRs === 0) {
              report = `🎉 *All PRs for ${sprintLabel} are merged!* 🥳`;
            } else {
              report = `🚨 *Pending Sprint PRs – ${sprintLabel}*\n🔢 Total PRs to merge: *${totalPRs}*\n\n` + report;
            }

            const date = new Date().toLocaleString("en-US", { timeZone: "Asia/Colombo" });
            report += `🕐 _Updated: ${date}_`;

            const webhook = process.env.SLACK_WEBHOOK_URL;

            await fetch(webhook, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ text: report })
            });
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
