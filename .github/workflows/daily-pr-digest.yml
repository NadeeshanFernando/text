name: Daily Sprint PR Digest

on:
  schedule:
    - cron: '30 3 * * *'  # 9:00 AM SLT
  workflow_dispatch:

jobs:
  sprint-pr-report:
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack PR Report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = "NadeeshanFernando";
            const repos = ["text"]; // Add more if needed
            const sprintLabel = "sprint-47";

            let totalPRs = 0;
            let report = "";

            const getHoursAgo = (dateStr) => {
              const msDiff = Date.now() - new Date(dateStr).getTime();
              return Math.floor(msDiff / 3600000);
            };

            for (const repo of repos) {
              const { data: prs } = await github.rest.pulls.list({
                owner,
                repo,
                state: "open",
                per_page: 100,
              });

              const sprintPRs = prs.filter(pr =>
                pr.labels.some(label => label.name === sprintLabel)
              );

              if (sprintPRs.length === 0) continue;

              totalPRs += sprintPRs.length;
              report += `📁 *Repository:* \`${repo}\`\n`;

              sprintPRs.forEach(pr => {
                const openedHours = getHoursAgo(pr.created_at);
                const updatedHours = getHoursAgo(pr.updated_at);
                const author = pr.user?.login || "Unknown";
                const prStatus = pr.draft ? "🟡 Draft" : "🟢 Open";

                report += `• 🔗 <${pr.html_url}|#${pr.number}> **${pr.title}**\n`;
                report += `  ┗ 🧑 Author: @${author}\n`;
                report += `     🕓 Opened: ${openedHours}h | 🔄 Last Updated: ${updatedHours}h | ${prStatus}\n\n`;
              });

              report += `━━━━━━━━━━━━━━━━━━━━━━━\n\n`;
            }

            const date = new Date().toLocaleString("en-US", {
              timeZone: "Asia/Colombo",
              dateStyle: "long",
              timeStyle: "short"
            });

            if (totalPRs === 0) {
              report = `🎉 *All PRs for ${sprintLabel} are merged!* 🥳`;
            } else {
              report =
                `📢 *Sprint PR Summary – ${sprintLabel}*\n` +
                `*Total PRs to merge:* \`${totalPRs}\`\n\n` +
                `━━━━━━━━━━━━━━━━━━━━━━━\n\n` +
                report +
                `🕒 _Report generated: ${date} (SLT)_`;
            }

            const webhook = process.env.SLACK_WEBHOOK_URL;

            await fetch(webhook, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ text: report })
            });
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
